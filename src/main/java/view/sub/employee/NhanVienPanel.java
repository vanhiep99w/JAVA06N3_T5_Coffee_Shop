/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.sub.employee;

import entities.Employee;
import entities.Shift;
import entities.Work;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import render.comboboxbutton.work.ButtonRender;
import render.table.TableCellRender;
import service.employee.EmployeeService;
import service.employee.EmployeeServiceImpl;
import service.shift.ShiftService;
import service.shift.ShiftServiceImpl;
import service.work.WorkService;
import service.work.WorkServiceImpl;
import util.ImageUtils;
import util.URL_Factory;

/**
 *
 * @author Admin
 */
public class NhanVienPanel extends javax.swing.JPanel {

    /**
     * Creates new form NhanVienPanel
     * Edit shift chưa được làm cần phát triển sau
     */
    private static final WorkService workService;
    private static final EmployeeService employeeService;
    private static final DefaultTableModel tableModel;
    private static final ShiftService shiftService;
    private final List<Work> works;
    private final List<Employee> employees; 
    private static final Employee selectedEmployee;
    private final List<Shift> selectedShift;
    private final List<Shift> allShifts;
    private final List<Shift> employeeShift;

    static {
        workService = new WorkServiceImpl();
        employeeService = new EmployeeServiceImpl();
        shiftService = new ShiftServiceImpl();
        selectedEmployee = new Employee();
        tableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
    }

    public NhanVienPanel() {
        
        works = workService.getAll();
        employees = employeeService.getAll();
        allShifts = shiftService.getAll();
        
        employeeShift = new ArrayList<>();
        selectedShift = new ArrayList<>();
        initComponents();
        setComponent();
        setEvent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btAdd = new javax.swing.JButton();
        cbWork = new javax.swing.JComboBox<>();
        pnButton = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbEmployee = new javax.swing.JTable();
        pnCenter = new javax.swing.JPanel();
        pnInfor = new javax.swing.JPanel();
        lbName = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        lbPhoneNumber = new javax.swing.JLabel();
        tfPhoneNumber = new javax.swing.JTextField();
        lbSalary = new javax.swing.JLabel();
        tfSalary = new javax.swing.JTextField();
        lbWork = new javax.swing.JLabel();
        cbWork1 = new javax.swing.JComboBox<>();
        btConfirm = new javax.swing.JButton();
        lbShift = new javax.swing.JLabel();
        cbShift3 = new javax.swing.JCheckBox();
        cbShift2 = new javax.swing.JCheckBox();
        cbShift1 = new javax.swing.JCheckBox();
        cbShift4 = new javax.swing.JCheckBox();
        pnLeft = new javax.swing.JPanel();
        btEdit = new javax.swing.JButton();
        btRemove = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(39, 130, 192));

        btAdd.setFocusPainted(false);

        cbWork.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        pnButton.setLayout(new javax.swing.BoxLayout(pnButton, javax.swing.BoxLayout.Y_AXIS));

        jScrollPane2.setBackground(new java.awt.Color(39, 130, 192));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0));

        tbEmployee.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tbEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1"
            }
        ));
        tbEmployee.setFocusable(false);
        tbEmployee.setRowHeight(60);
        tbEmployee.setRowMargin(0);
        tbEmployee.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbEmployee.setShowHorizontalLines(false);
        tbEmployee.setShowVerticalLines(false);
        tbEmployee.setTableHeader(null);
        jScrollPane2.setViewportView(tbEmployee);

        pnButton.add(jScrollPane2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbWork, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbWork, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(btAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnButton, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel1, java.awt.BorderLayout.WEST);

        pnCenter.setBackground(new java.awt.Color(39, 130, 192));
        pnCenter.setLayout(new java.awt.BorderLayout());

        pnInfor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Thông Tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 1, 26), new java.awt.Color(56, 180, 123))); // NOI18N

        lbName.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        lbName.setText("   Số ĐT    :");

        tfName.setEditable(false);
        tfName.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        tfName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbPhoneNumber.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        lbPhoneNumber.setText("Họ và Tên :");

        tfPhoneNumber.setEditable(false);
        tfPhoneNumber.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        tfPhoneNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbSalary.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        lbSalary.setText("   Lương    :");

        tfSalary.setEditable(false);
        tfSalary.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        tfSalary.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbWork.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        lbWork.setText("  Vị Trí     :");

        cbWork1.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        cbWork1.setEnabled(false);

        btConfirm.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        btConfirm.setForeground(new java.awt.Color(56, 180, 123));
        btConfirm.setText("Xác Nhận");
        btConfirm.setEnabled(false);
        btConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfirmActionPerformed(evt);
            }
        });

        lbShift.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        lbShift.setText("      Ca       :");

        cbShift3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbShift3.setText("Ca3( 15r- 19r)");
        cbShift3.setFocusPainted(false);
        cbShift3.setPreferredSize(new java.awt.Dimension(100, 40));

        cbShift2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbShift2.setText("Ca2( 11r- 15r)");
        cbShift2.setFocusPainted(false);
        cbShift2.setPreferredSize(new java.awt.Dimension(100, 40));

        cbShift1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbShift1.setText("Ca1( 7- 11r)");
        cbShift1.setFocusPainted(false);
        cbShift1.setPreferredSize(new java.awt.Dimension(100, 40));
        cbShift1.setVerifyInputWhenFocusTarget(false);
        cbShift1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbShift1ActionPerformed(evt);
            }
        });

        cbShift4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbShift4.setText("Ca4( 19r- 23)");
        cbShift4.setFocusPainted(false);
        cbShift4.setPreferredSize(new java.awt.Dimension(100, 40));

        javax.swing.GroupLayout pnInforLayout = new javax.swing.GroupLayout(pnInfor);
        pnInfor.setLayout(pnInforLayout);
        pnInforLayout.setHorizontalGroup(
            pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInforLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbShift, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbWork, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnInforLayout.createSequentialGroup()
                        .addComponent(cbShift1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbShift2, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbShift3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbShift4, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tfSalary, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbWork1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfPhoneNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tfName))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnInforLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(301, 301, 301))
        );
        pnInforLayout.setVerticalGroup(
            pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInforLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPhoneNumber))
                .addGap(37, 37, 37)
                .addGroup(pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbWork1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbWork, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbShift, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbShift2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbShift4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbShift1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbShift3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(btConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pnInforLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cbWork1, lbWork});

        pnCenter.add(pnInfor, java.awt.BorderLayout.CENTER);

        btEdit.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        btEdit.setForeground(new java.awt.Color(56, 180, 123));
        btEdit.setText("Chỉnh Sửa");
        btEdit.setEnabled(false);
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        btRemove.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        btRemove.setForeground(new java.awt.Color(56, 180, 123));
        btRemove.setText("Xóa");
        btRemove.setEnabled(false);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        jButton3.setForeground(new java.awt.Color(56, 180, 123));
        jButton3.setText("Tạm Khóa");
        jButton3.setEnabled(false);

        javax.swing.GroupLayout pnLeftLayout = new javax.swing.GroupLayout(pnLeft);
        pnLeft.setLayout(pnLeftLayout);
        pnLeftLayout.setHorizontalGroup(
            pnLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnLeftLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnLeftLayout.setVerticalGroup(
            pnLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnLeftLayout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(btEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(281, Short.MAX_VALUE))
        );

        pnLeftLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btEdit, btRemove, jButton3});

        pnCenter.add(pnLeft, java.awt.BorderLayout.EAST);

        add(pnCenter, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btEditActionPerformed

    private void btConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfirmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btConfirmActionPerformed

    private void cbShift1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbShift1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbShift1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btConfirm;
    private javax.swing.JButton btEdit;
    private javax.swing.JButton btRemove;
    private javax.swing.JCheckBox cbShift1;
    private javax.swing.JCheckBox cbShift2;
    private javax.swing.JCheckBox cbShift3;
    private javax.swing.JCheckBox cbShift4;
    private javax.swing.JComboBox<String> cbWork;
    private javax.swing.JComboBox<String> cbWork1;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbPhoneNumber;
    private javax.swing.JLabel lbSalary;
    private javax.swing.JLabel lbShift;
    private javax.swing.JLabel lbWork;
    private javax.swing.JPanel pnButton;
    private javax.swing.JPanel pnCenter;
    private javax.swing.JPanel pnInfor;
    private javax.swing.JPanel pnLeft;
    public static javax.swing.JTable tbEmployee;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPhoneNumber;
    private javax.swing.JTextField tfSalary;
    // End of variables declaration//GEN-END:variables

    private void setComponent() {
        setComboBox();
        setTable();
        setEnableChecBox(false);
        setCheckBox();
        setbtAdd();
    }
    
    private void setComboBox() {

        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        Work work = new Work();
        work.setId(0);
        comboBoxModel.addElement(work);
        addElementModel(comboBoxModel);
        cbWork.setModel(comboBoxModel);
        cbWork.setRenderer(new ButtonRender());

        DefaultComboBoxModel comboBoxModel1 = new DefaultComboBoxModel();
        addElementModel(comboBoxModel1);
        cbWork1.setModel(comboBoxModel1);
        cbWork1.setRenderer(new ButtonRender());
        cbWork1.setFont(new Font("Tahoma", Font.PLAIN, 26));

    }

    private void addElementModel(DefaultComboBoxModel comboBoxModel) {
        works.forEach(t -> {
            comboBoxModel.addElement(t);
        });
    }

    private void setTable() {
        tbEmployee.setModel(tableModel);
        tableModel.setColumnIdentifiers(new Object[]{""});
        //Object[][] objectses = employees.stream().map(t -> new Object[]{t}).toArray(Object[][] :: new);
        setTableData();
        tbEmployee.getColumnModel().getColumn(0).setCellRenderer(new TableCellRender());
    }

    private void setEvent() {
        setTableEvent();
        setComboBoxEvent();
        setbtAddEvent();
        setbtEditEvent();
        setbtConfirmEvent();
        setbtRemoveEvent();
        
    }
    
   
    public void setTableEvent() {
        

        tbEmployee.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                int selectedIndex = tbEmployee.getSelectedRow();
              
                Employee employee = (Employee) tbEmployee.getValueAt(selectedIndex, 0);
                selectedEmployee.copy(employee);
                employeeShift.clear();
                employeeShift.addAll(shiftService.getAll(selectedEmployee.getId()));
                setCheckBox();
                setSelectedCheckbox();
                tfName.setText(selectedEmployee.getName());
                tfPhoneNumber.setText(selectedEmployee.getPhone());
                cbWork1.setSelectedItem(selectedEmployee.getWork());
                btEdit.setEnabled(true);
                btRemove.setEnabled(true);
                
            }
        });
        
    }

    private void setComboBoxEvent() {
        cbWork.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Work work = (Work) cbWork.getSelectedItem();
                tableModel.setRowCount(0);
                employees.clear();
                if (work.getId() == 0) {
                    employees.addAll(employeeService.getAll());
                } else {
                    employees.addAll(employeeService.getALl(work.getId()));
                }
                setTableData();
            }
        });
    }

    private void setTableData() {
        employees.forEach(t -> tableModel.addRow(new Object[]{t}));
        
    }

    private void setbtAddEvent() {
        btAdd.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {

                new AddDialog(true, NhanVienPanel.this).setVisible(true);
            }
        });
    }

    private void setbtEditEvent() {
        btEdit.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                if (btEdit.isEnabled()) {
                    tfName.setEditable(true);
                    tfPhoneNumber.setEditable(true);
                    setEnableChecBox(true);
                    btConfirm.setEnabled(true);
                    cbWork1.setEnabled(true);
                    btRemove.setEnabled(false);
                }
            }
        });

    }

    private void setbtConfirmEvent() {
        btConfirm.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                if (btConfirm.isEnabled()) {
                    tfName.setEditable(false);
                    tfPhoneNumber.setEditable(false);
                    btConfirm.setEnabled(false);
                    cbWork1.setEnabled(false);
                    setEnableChecBox(false);
                    selectedEmployee.setName(tfName.getText());
                    selectedEmployee.setPhone(tfPhoneNumber.getText());
                    selectedEmployee.setWork((Work) cbWork1.getSelectedItem());                  
                    employeeService.update(selectedEmployee);
                    shiftService.deleteShift(selectedEmployee.getId());
                    getSeletedShift();
                    shiftService.insertShift(selectedShift, selectedEmployee.getId());
                    int count = tbEmployee.getRowCount();
                    for(int i =0 ;i < count ;i++){
                        tableModel.removeRow(0);
                    }
                    employees.clear();
                    employees.addAll(employeeService.getAll());
                    setTableData();

                }
            }
        });
    }
    
     private void getSeletedShift(){
        selectedShift.clear();
        if(cbShift1.isSelected()){
            Shift shift = new Shift();
            shift.setId(1);
            selectedShift.add(shift);
        }if(cbShift2.isSelected()){
            Shift shift = new Shift();
            shift.setId(2);
            selectedShift.add(shift);
        }if(cbShift3.isSelected()){
            Shift shift = new Shift();
            shift.setId(3);
            selectedShift.add(shift);
        }if(cbShift4.isSelected()){
            Shift shift = new Shift();
            shift.setId(4);
            selectedShift.add(shift);
        }
    }

    private void setbtRemoveEvent() {
        btRemove.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                if (btRemove.isEnabled()) {
                    // 0=yes, 1=no, 2=cancel
                    int selected = JOptionPane.showConfirmDialog(null, "Xóa Nhân Viên");
                    if (selected == 0) {
                        employeeService.remove(selectedEmployee.getId());
                        tableModel.removeRow(tbEmployee.getSelectedRow());
                    }
                }
            }
        });
    }

    public static DefaultTableModel getTableModel() {
        return tableModel;
    }
    
    public void setEnableChecBox(boolean chosse){
        cbShift3.setEnabled(chosse);
        cbShift2.setEnabled(chosse);
        cbShift1.setEnabled(chosse);
        cbShift4.setEnabled(chosse);
    }

    private void setCheckBox() {
        cbShift3.setSelected(false);
        cbShift2.setSelected(false);
        cbShift1.setSelected(false);
        cbShift4.setSelected(false);
        setCheckBoxIcon(cbShift1);
        setCheckBoxIcon(cbShift2);
        setCheckBoxIcon(cbShift3);
        setCheckBoxIcon(cbShift4);
    }
    
    private void setCheckBoxIcon(JCheckBox cb){
        cb.setIcon(ImageUtils.loadImage(URL_Factory.IMAGE_FOLDER_URL+"unselect.png"));
        cb.setSelectedIcon(ImageUtils.loadImage(URL_Factory.IMAGE_FOLDER_URL+"selected.png"));
    }

    private void setbtAdd() {
        btAdd.setIcon(ImageUtils.loadImage(URL_Factory.IMAGE_FOLDER_URL+"addE.png"));
    }
    
    private void setSelectedCheckbox(){
        employeeShift.forEach(t -> {
            String shiftID = t.getId()+"";
            if("1".equals(shiftID)){
                cbShift1.setSelected(true);
            }if("2".equals(shiftID)){
                cbShift2.setSelected(true);
            }if("3".equals(shiftID)){
                cbShift3.setSelected(true);
            }if("4".equals(shiftID)){
                cbShift4.setSelected(true);
            }
        });
    }

   
   

    

    
}
